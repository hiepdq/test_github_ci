ARM GAS  /tmp/ccbZzF9K.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f1xx_it.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.NMI_Handler,"ax",%progbits
  16              		.align	1
  17              		.global	NMI_Handler
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	NMI_Handler:
  24              	.LFB65:
  25              		.file 1 "Core/Src/stm32f1xx_it.c"
   1:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f1xx_it.c **** /**
   3:Core/Src/stm32f1xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32f1xx_it.c ****   * @file    stm32f1xx_it.c
   5:Core/Src/stm32f1xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32f1xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32f1xx_it.c ****   * @attention
   8:Core/Src/stm32f1xx_it.c ****   *
   9:Core/Src/stm32f1xx_it.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/stm32f1xx_it.c ****   * All rights reserved.</center></h2>
  11:Core/Src/stm32f1xx_it.c ****   *
  12:Core/Src/stm32f1xx_it.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/stm32f1xx_it.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/stm32f1xx_it.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/stm32f1xx_it.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/stm32f1xx_it.c ****   *
  17:Core/Src/stm32f1xx_it.c ****   ******************************************************************************
  18:Core/Src/stm32f1xx_it.c ****   */
  19:Core/Src/stm32f1xx_it.c **** /* USER CODE END Header */
  20:Core/Src/stm32f1xx_it.c **** 
  21:Core/Src/stm32f1xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Core/Src/stm32f1xx_it.c **** #include "main.h"
  23:Core/Src/stm32f1xx_it.c **** #include "stm32f1xx_it.h"
  24:Core/Src/stm32f1xx_it.c **** /* Private includes ----------------------------------------------------------*/
  25:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN Includes */
  26:Core/Src/stm32f1xx_it.c **** /* USER CODE END Includes */
  27:Core/Src/stm32f1xx_it.c **** 
  28:Core/Src/stm32f1xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN TD */
  30:Core/Src/stm32f1xx_it.c **** 
  31:Core/Src/stm32f1xx_it.c **** /* USER CODE END TD */
  32:Core/Src/stm32f1xx_it.c **** 
  33:Core/Src/stm32f1xx_it.c **** /* Private define ------------------------------------------------------------*/
ARM GAS  /tmp/ccbZzF9K.s 			page 2


  34:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PD */
  35:Core/Src/stm32f1xx_it.c **** 
  36:Core/Src/stm32f1xx_it.c **** /* USER CODE END PD */
  37:Core/Src/stm32f1xx_it.c **** 
  38:Core/Src/stm32f1xx_it.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PM */
  40:Core/Src/stm32f1xx_it.c **** 
  41:Core/Src/stm32f1xx_it.c **** /* USER CODE END PM */
  42:Core/Src/stm32f1xx_it.c **** 
  43:Core/Src/stm32f1xx_it.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PV */
  45:Core/Src/stm32f1xx_it.c **** 
  46:Core/Src/stm32f1xx_it.c **** /* USER CODE END PV */
  47:Core/Src/stm32f1xx_it.c **** 
  48:Core/Src/stm32f1xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  49:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PFP */
  50:Core/Src/stm32f1xx_it.c **** 
  51:Core/Src/stm32f1xx_it.c **** /* USER CODE END PFP */
  52:Core/Src/stm32f1xx_it.c **** 
  53:Core/Src/stm32f1xx_it.c **** /* Private user code ---------------------------------------------------------*/
  54:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN 0 */
  55:Core/Src/stm32f1xx_it.c **** 
  56:Core/Src/stm32f1xx_it.c **** /* USER CODE END 0 */
  57:Core/Src/stm32f1xx_it.c **** 
  58:Core/Src/stm32f1xx_it.c **** /* External variables --------------------------------------------------------*/
  59:Core/Src/stm32f1xx_it.c **** 
  60:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN EV */
  61:Core/Src/stm32f1xx_it.c **** 
  62:Core/Src/stm32f1xx_it.c **** /* USER CODE END EV */
  63:Core/Src/stm32f1xx_it.c **** 
  64:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
  65:Core/Src/stm32f1xx_it.c **** /*           Cortex-M3 Processor Interruption and Exception Handlers          */
  66:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
  67:Core/Src/stm32f1xx_it.c **** /**
  68:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Non maskable interrupt.
  69:Core/Src/stm32f1xx_it.c ****   */
  70:Core/Src/stm32f1xx_it.c **** void NMI_Handler(void)
  71:Core/Src/stm32f1xx_it.c **** {
  26              		.loc 1 71 0
  27              		.cfi_startproc
  28              		@ Volatile: function does not return.
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.L2:
  33 0000 FEE7     		b	.L2
  34              		.cfi_endproc
  35              	.LFE65:
  37              		.section	.text.HardFault_Handler,"ax",%progbits
  38              		.align	1
  39              		.global	HardFault_Handler
  40              		.syntax unified
  41              		.thumb
  42              		.thumb_func
  43              		.fpu softvfp
  45              	HardFault_Handler:
  46              	.LFB66:
ARM GAS  /tmp/ccbZzF9K.s 			page 3


  72:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  73:Core/Src/stm32f1xx_it.c **** 
  74:Core/Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  75:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  76:Core/Src/stm32f1xx_it.c ****   while (1)
  77:Core/Src/stm32f1xx_it.c ****   {
  78:Core/Src/stm32f1xx_it.c ****   }
  79:Core/Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  80:Core/Src/stm32f1xx_it.c **** }
  81:Core/Src/stm32f1xx_it.c **** 
  82:Core/Src/stm32f1xx_it.c **** /**
  83:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Hard fault interrupt.
  84:Core/Src/stm32f1xx_it.c ****   */
  85:Core/Src/stm32f1xx_it.c **** void HardFault_Handler(void)
  86:Core/Src/stm32f1xx_it.c **** {
  47              		.loc 1 86 0
  48              		.cfi_startproc
  49              		@ Volatile: function does not return.
  50              		@ args = 0, pretend = 0, frame = 0
  51              		@ frame_needed = 0, uses_anonymous_args = 0
  52              		@ link register save eliminated.
  53              	.L4:
  54 0000 FEE7     		b	.L4
  55              		.cfi_endproc
  56              	.LFE66:
  58              		.section	.text.MemManage_Handler,"ax",%progbits
  59              		.align	1
  60              		.global	MemManage_Handler
  61              		.syntax unified
  62              		.thumb
  63              		.thumb_func
  64              		.fpu softvfp
  66              	MemManage_Handler:
  67              	.LFB67:
  87:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  88:Core/Src/stm32f1xx_it.c **** 
  89:Core/Src/stm32f1xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  90:Core/Src/stm32f1xx_it.c ****   while (1)
  91:Core/Src/stm32f1xx_it.c ****   {
  92:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  93:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  94:Core/Src/stm32f1xx_it.c ****   }
  95:Core/Src/stm32f1xx_it.c **** }
  96:Core/Src/stm32f1xx_it.c **** 
  97:Core/Src/stm32f1xx_it.c **** /**
  98:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Memory management fault.
  99:Core/Src/stm32f1xx_it.c ****   */
 100:Core/Src/stm32f1xx_it.c **** void MemManage_Handler(void)
 101:Core/Src/stm32f1xx_it.c **** {
  68              		.loc 1 101 0
  69              		.cfi_startproc
  70              		@ Volatile: function does not return.
  71              		@ args = 0, pretend = 0, frame = 0
  72              		@ frame_needed = 0, uses_anonymous_args = 0
  73              		@ link register save eliminated.
  74              	.L6:
  75 0000 FEE7     		b	.L6
ARM GAS  /tmp/ccbZzF9K.s 			page 4


  76              		.cfi_endproc
  77              	.LFE67:
  79              		.section	.text.BusFault_Handler,"ax",%progbits
  80              		.align	1
  81              		.global	BusFault_Handler
  82              		.syntax unified
  83              		.thumb
  84              		.thumb_func
  85              		.fpu softvfp
  87              	BusFault_Handler:
  88              	.LFB68:
 102:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 103:Core/Src/stm32f1xx_it.c **** 
 104:Core/Src/stm32f1xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 105:Core/Src/stm32f1xx_it.c ****   while (1)
 106:Core/Src/stm32f1xx_it.c ****   {
 107:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 108:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 109:Core/Src/stm32f1xx_it.c ****   }
 110:Core/Src/stm32f1xx_it.c **** }
 111:Core/Src/stm32f1xx_it.c **** 
 112:Core/Src/stm32f1xx_it.c **** /**
 113:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Prefetch fault, memory access fault.
 114:Core/Src/stm32f1xx_it.c ****   */
 115:Core/Src/stm32f1xx_it.c **** void BusFault_Handler(void)
 116:Core/Src/stm32f1xx_it.c **** {
  89              		.loc 1 116 0
  90              		.cfi_startproc
  91              		@ Volatile: function does not return.
  92              		@ args = 0, pretend = 0, frame = 0
  93              		@ frame_needed = 0, uses_anonymous_args = 0
  94              		@ link register save eliminated.
  95              	.L8:
  96 0000 FEE7     		b	.L8
  97              		.cfi_endproc
  98              	.LFE68:
 100              		.section	.text.UsageFault_Handler,"ax",%progbits
 101              		.align	1
 102              		.global	UsageFault_Handler
 103              		.syntax unified
 104              		.thumb
 105              		.thumb_func
 106              		.fpu softvfp
 108              	UsageFault_Handler:
 109              	.LFB69:
 117:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 118:Core/Src/stm32f1xx_it.c **** 
 119:Core/Src/stm32f1xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 120:Core/Src/stm32f1xx_it.c ****   while (1)
 121:Core/Src/stm32f1xx_it.c ****   {
 122:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 123:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 124:Core/Src/stm32f1xx_it.c ****   }
 125:Core/Src/stm32f1xx_it.c **** }
 126:Core/Src/stm32f1xx_it.c **** 
 127:Core/Src/stm32f1xx_it.c **** /**
 128:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
ARM GAS  /tmp/ccbZzF9K.s 			page 5


 129:Core/Src/stm32f1xx_it.c ****   */
 130:Core/Src/stm32f1xx_it.c **** void UsageFault_Handler(void)
 131:Core/Src/stm32f1xx_it.c **** {
 110              		.loc 1 131 0
 111              		.cfi_startproc
 112              		@ Volatile: function does not return.
 113              		@ args = 0, pretend = 0, frame = 0
 114              		@ frame_needed = 0, uses_anonymous_args = 0
 115              		@ link register save eliminated.
 116              	.L10:
 117 0000 FEE7     		b	.L10
 118              		.cfi_endproc
 119              	.LFE69:
 121              		.section	.text.SVC_Handler,"ax",%progbits
 122              		.align	1
 123              		.global	SVC_Handler
 124              		.syntax unified
 125              		.thumb
 126              		.thumb_func
 127              		.fpu softvfp
 129              	SVC_Handler:
 130              	.LFB70:
 132:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 133:Core/Src/stm32f1xx_it.c **** 
 134:Core/Src/stm32f1xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 135:Core/Src/stm32f1xx_it.c ****   while (1)
 136:Core/Src/stm32f1xx_it.c ****   {
 137:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 138:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 139:Core/Src/stm32f1xx_it.c ****   }
 140:Core/Src/stm32f1xx_it.c **** }
 141:Core/Src/stm32f1xx_it.c **** 
 142:Core/Src/stm32f1xx_it.c **** /**
 143:Core/Src/stm32f1xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 144:Core/Src/stm32f1xx_it.c ****   */
 145:Core/Src/stm32f1xx_it.c **** void SVC_Handler(void)
 146:Core/Src/stm32f1xx_it.c **** {
 131              		.loc 1 146 0
 132              		.cfi_startproc
 133              		@ args = 0, pretend = 0, frame = 0
 134              		@ frame_needed = 0, uses_anonymous_args = 0
 135              		@ link register save eliminated.
 147:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 148:Core/Src/stm32f1xx_it.c **** 
 149:Core/Src/stm32f1xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 150:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 151:Core/Src/stm32f1xx_it.c **** 
 152:Core/Src/stm32f1xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 153:Core/Src/stm32f1xx_it.c **** }
 136              		.loc 1 153 0
 137 0000 7047     		bx	lr
 138              		.cfi_endproc
 139              	.LFE70:
 141              		.section	.text.DebugMon_Handler,"ax",%progbits
 142              		.align	1
 143              		.global	DebugMon_Handler
 144              		.syntax unified
ARM GAS  /tmp/ccbZzF9K.s 			page 6


 145              		.thumb
 146              		.thumb_func
 147              		.fpu softvfp
 149              	DebugMon_Handler:
 150              	.LFB71:
 154:Core/Src/stm32f1xx_it.c **** 
 155:Core/Src/stm32f1xx_it.c **** /**
 156:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Debug monitor.
 157:Core/Src/stm32f1xx_it.c ****   */
 158:Core/Src/stm32f1xx_it.c **** void DebugMon_Handler(void)
 159:Core/Src/stm32f1xx_it.c **** {
 151              		.loc 1 159 0
 152              		.cfi_startproc
 153              		@ args = 0, pretend = 0, frame = 0
 154              		@ frame_needed = 0, uses_anonymous_args = 0
 155              		@ link register save eliminated.
 160:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 161:Core/Src/stm32f1xx_it.c **** 
 162:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 163:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 164:Core/Src/stm32f1xx_it.c **** 
 165:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 166:Core/Src/stm32f1xx_it.c **** }
 156              		.loc 1 166 0
 157 0000 7047     		bx	lr
 158              		.cfi_endproc
 159              	.LFE71:
 161              		.section	.text.PendSV_Handler,"ax",%progbits
 162              		.align	1
 163              		.global	PendSV_Handler
 164              		.syntax unified
 165              		.thumb
 166              		.thumb_func
 167              		.fpu softvfp
 169              	PendSV_Handler:
 170              	.LFB72:
 167:Core/Src/stm32f1xx_it.c **** 
 168:Core/Src/stm32f1xx_it.c **** /**
 169:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Pendable request for system service.
 170:Core/Src/stm32f1xx_it.c ****   */
 171:Core/Src/stm32f1xx_it.c **** void PendSV_Handler(void)
 172:Core/Src/stm32f1xx_it.c **** {
 171              		.loc 1 172 0
 172              		.cfi_startproc
 173              		@ args = 0, pretend = 0, frame = 0
 174              		@ frame_needed = 0, uses_anonymous_args = 0
 175              		@ link register save eliminated.
 173:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 174:Core/Src/stm32f1xx_it.c **** 
 175:Core/Src/stm32f1xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 176:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 177:Core/Src/stm32f1xx_it.c **** 
 178:Core/Src/stm32f1xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 179:Core/Src/stm32f1xx_it.c **** }
 176              		.loc 1 179 0
 177 0000 7047     		bx	lr
 178              		.cfi_endproc
ARM GAS  /tmp/ccbZzF9K.s 			page 7


 179              	.LFE72:
 181              		.section	.text.SysTick_Handler,"ax",%progbits
 182              		.align	1
 183              		.global	SysTick_Handler
 184              		.syntax unified
 185              		.thumb
 186              		.thumb_func
 187              		.fpu softvfp
 189              	SysTick_Handler:
 190              	.LFB73:
 180:Core/Src/stm32f1xx_it.c **** 
 181:Core/Src/stm32f1xx_it.c **** /**
 182:Core/Src/stm32f1xx_it.c ****   * @brief This function handles System tick timer.
 183:Core/Src/stm32f1xx_it.c ****   */
 184:Core/Src/stm32f1xx_it.c **** void SysTick_Handler(void)
 185:Core/Src/stm32f1xx_it.c **** {
 191              		.loc 1 185 0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 0
 194              		@ frame_needed = 0, uses_anonymous_args = 0
 195 0000 08B5     		push	{r3, lr}
 196              	.LCFI0:
 197              		.cfi_def_cfa_offset 8
 198              		.cfi_offset 3, -8
 199              		.cfi_offset 14, -4
 186:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 187:Core/Src/stm32f1xx_it.c **** 
 188:Core/Src/stm32f1xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 189:Core/Src/stm32f1xx_it.c ****   HAL_IncTick();
 200              		.loc 1 189 0
 201 0002 FFF7FEFF 		bl	HAL_IncTick
 202              	.LVL0:
 190:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 191:Core/Src/stm32f1xx_it.c **** 
 192:Core/Src/stm32f1xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 193:Core/Src/stm32f1xx_it.c **** }
 203              		.loc 1 193 0
 204 0006 08BD     		pop	{r3, pc}
 205              		.cfi_endproc
 206              	.LFE73:
 208              		.text
 209              	.Letext0:
 210              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 211              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 212              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 213              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 214              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
ARM GAS  /tmp/ccbZzF9K.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f1xx_it.c
     /tmp/ccbZzF9K.s:16     .text.NMI_Handler:0000000000000000 $t
     /tmp/ccbZzF9K.s:23     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/ccbZzF9K.s:38     .text.HardFault_Handler:0000000000000000 $t
     /tmp/ccbZzF9K.s:45     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/ccbZzF9K.s:59     .text.MemManage_Handler:0000000000000000 $t
     /tmp/ccbZzF9K.s:66     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/ccbZzF9K.s:80     .text.BusFault_Handler:0000000000000000 $t
     /tmp/ccbZzF9K.s:87     .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/ccbZzF9K.s:101    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/ccbZzF9K.s:108    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/ccbZzF9K.s:122    .text.SVC_Handler:0000000000000000 $t
     /tmp/ccbZzF9K.s:129    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/ccbZzF9K.s:142    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/ccbZzF9K.s:149    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/ccbZzF9K.s:162    .text.PendSV_Handler:0000000000000000 $t
     /tmp/ccbZzF9K.s:169    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/ccbZzF9K.s:182    .text.SysTick_Handler:0000000000000000 $t
     /tmp/ccbZzF9K.s:189    .text.SysTick_Handler:0000000000000000 SysTick_Handler

UNDEFINED SYMBOLS
HAL_IncTick
